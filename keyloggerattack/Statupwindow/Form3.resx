<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD8AAABACAYAAACtK6/LAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFxEAABcRAcom8z8AAAOoSURBVHhe5VurkhNRFIxAIJAIBBKxgg9YsQKxH7AiAolE
        IFYgccgVfAiST0AiVyAQCASVQjB5FWJF6A7nhJvhzPvce2dCV3Vld+a8umtmMq/MhmC3292TP7MgW382
        Xi6X71er1TtZlBTofQ1+XCwWD2RRGrAhRH8AdySGeCurkoDCg97pDGAjNtTmwRDXEhIVofCgd3wDqoQr
        YxtQFMUrqy+J3rebzeaRhPoCDR7WCVfGMgC156h9V+4XEus/uxvAgixsNbS4Xq+fS6oLULNRuNLVgK7C
        SRl0LiUGgXXaCg/4BTyTEv2w3W4fdxWu9DCA+T2E74m87/jsZwATpYBZvA1l8Csp2QnIuwDXWqsPexnA
        hKHCA1LAhZRuBcZLnlWvE6kDPJfS9UCCp3BlawMYJ/FWnb5s7s8A8KckeLNxAK6XOCt/KKv7c4UEWIle
        ZH1zH+TyCFtcmfgWXl9Kyz/AwhTC9xSBRwbw/wTC90Sfv99CvDrDP/xeNINjMDSAn6mEK9HvG3Tf3xuA
        BTkGYL+rTH2Pdz0uSD1IBnKffyqSj4GVp2xA9dFeQWck0CowVTYLVzBQEqxCU2N74QomSKJVcBLELnyH
        LfmZSOoGFJisARSOz2GX1XROCplNxkgX4QoWmooBrsIVLDgFA7Clut5COwDFR20AZot7+xxN5uWmY2B0
        4Qo2sgbIxWTCFWMxAHO8lpHSYgQGZHlIekBGA/IKJ/5b8SPY7G9klLQYgfA9OYeMlAZo+rI8RE4mMwDN
        RnmWF90ANBn76e0LGdUXKD76CxuZz/eKbkrX9K4GoNDk7ua4GIACU7+N1e3GpYKJ4KRvYIKcv/OdWz68
        +BEUmTLbG4DAU3xq02wAAk72cZXost/PKYriyakKV5oG9HnXbihlkLyPqOXV8dtyUEyiHw+mo3k5IeWp
        6z8HH/Q+l+VWvCtF5/EJEE5hL7Ew9gCVR10ul/VWngtN4QqsiDlApXAF10uclT+IEP4Ln/WnvAhwH4CO
        c8uSFrVAfAwDGo0/gPsg6HIQqt3UKoB4fgt4HYPaC1cgYfBRuI9wBfMcDOguXIHE3gYMEa5gfl8DODd2
        NfvNq7ZAoTPwa1i4DdHc5Z4aanU2gMLxaZ/KdkXXM0Av4Yq6HxaV6Spc0dYAb+EK1rX6heR8vEaRFF+0
        MOCNhEZBnQGci/NJaBzU/LYuybMzy4AkwhWGAUkfGqLfTdD7UzLhisCALE9L2Zf9o/+MtAqHy8JMGNZ/
        NvsNFFvGY26x0s8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAkgAAADaCAYAAABdL73OAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAQ/SURBVHhe7djBbYNAAEVBSkkZKSgVct0a6IAaaIHISMT2
        k4l8yCGHGekJs1rfv5h2AACeTB+fX7skSZLuGUiSJEnJQJIkSUoGkiRJUjKQJEmSkoEkSZKUDCRJkqRk
        IEmSJCUDSZIkKRlIkiRJyUCSJElKBpIkSVIykCRJkpKBJEmSlAwkSZKkZCBJkiQlA0mSJCkZSJIkSclA
        kiRJSgaSJElSMpAkSZKSgSRJkpQMJEmSpGQgSZIkJQNJkiQpGUiSJEnJQJIkSUoGkiRJUjKQJEmSkoEk
        SZKUDCRJkqRkIEmSJCUDSZIkKRlIkiRJyUCSJElKBpIkSVIykCRJkpKBJEmSlAwkSZKkZCBJkiQlA0mS
        JCkZSJIkSclAkiRJSgaSJElSMpAkSZKSgSRJkpQMJEmSpDTtAAD8WJbFQAIAeGQgAQCEgQQAEAYSAEAY
        SAAAYSABAISBBAAQBhIAQBhIAABhIAEAhIEEABAGEgBAGEgAAGEgAQCEgQQAEAYSAEAYSAAAYSABAISB
        BAAQBhIAQBhIAABhIAEAhIEEABAGEgBAGEgAAGEgAQCEgQQAEAYSAEAYSAAAYSABAISBBAAQBhIAQBhI
        AABhIAEAhIEEABAGEgBAGEgAAGEgAQCEgQQAEAYSAEAYSAAAYSABAISBBAAQBhIAQBhIAABhIAEAhIEE
        ABAGEgBAGEgAAGEgAQCEgQQAEAYSAEAYSAAAYSABAISBBAAQBhIAQBhIAABhIAEAxLquBhIAwCNfkAAA
        wkACAAgDCQAgDCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkACAAgDCQAg
        DCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkACAAgDCQAgDCQAgDCQAADC
        QAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkACAAgDCQAgDCQAgDCQAADCQAIACAMJACAM
        JACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkACAAgDCQAgDCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJA
        AgAIAwkAIAwkAIAwkAAAwkACAAgDCQAgDCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwk
        AIAwkAAAwkACAAgDCQAgDCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkAC
        AAgDCQAgDCQAgDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAwkACAAgDCQAgDCQA
        gDCQAADCQAIACAMJACAMJACAMJAAAMJAAgAIAwkAIAwkAIAwkAAAYl3X+0Datu04OLutJ/3PxhhH8zwf
        3X6f51fP895vd67uvtur/7xzdr6fZ6/er+5KkvTXjTH2b9hdeJXplJliAAAAAElFTkSuQmCC
</value>
  </data>
</root>